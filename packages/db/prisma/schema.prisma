// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id            String  @id @default(cuid())
  name          String
  email         String  @unique
  image         String?
  walletAddress String? @unique

  isVerified Boolean @default(false)
  isActive   Boolean @default(true)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  lastLoginAt DateTime @default(now())
  Quiz        Quiz[]

  @@map("hosts")
}

model Quiz {
  id              String   @id @default(cuid())
  title           String   @db.VarChar(50)
  description     String?
  participantCode String?  @unique
  spectatorCode   String?  @unique
  spectatorLink   String?

  prizePool Float // Maybe in lamports -> then Number
  currency  String @default("SOL")

  basePointsPerQuestion Int     @default(100)
  pointsMultiplier      Float   @default(1.2)
  timeBonus             Boolean @default(true)

  eliminationThreshold Float @default(0.5)

  questionTimeLimit     Int            @default(30)
  breakBetweenQuestions Int            @default(5)

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  scheduledAt DateTime?
  startedAt   DateTime?
  endedAt     DateTime?
  hostId      String
  host        User      @relation(fields: [hostId], references: [id], onDelete: Cascade)

  autoSave          Boolean @default(true)
  liveChat          Boolean @default(false)
  spectatorMode     Boolean @default(false)
  allowNewSpectator Boolean @default(true)

  @@map("quizzes")
}